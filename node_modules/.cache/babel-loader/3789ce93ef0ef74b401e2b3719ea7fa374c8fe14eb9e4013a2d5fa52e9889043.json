{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Imran Khan\\\\Desktop\\\\Blockchain\\\\eth_daddy\\\\src\\\\components\\\\Domain.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Domain = _ref => {\n  _s();\n  let {\n    domain,\n    ethDaddy,\n    provider,\n    id\n  } = _ref;\n  const [owner, setOwner] = useState(null);\n  const [hasSold, setHasSold] = useState(false);\n  const getOwner = async () => {\n    if (domain.isOwned || hasSold) {\n      const owner = await ethDaddy.ownerOf(id);\n      setOwner(owner);\n    }\n  };\n  const buyHandler = async () => {\n    const signer = await provider.getSigner();\n    const transaction = await ethDaddy.connect(signer).mint(id, {\n      value: domain.cost\n    });\n    await transaction.wait();\n  };\n  useEffect(() => {\n    getOwner();\n  }, [hasSold]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card__info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: domain.isOwned || owner ? /*#__PURE__*/_jsxDEV(\"del\", {\n          children: domain.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: domain.name\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: domain.isOwned || owner ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Owned by:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 26\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: owner && owner.slice(0, 6) + '...' + owner.slice(38, 42)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: ethers.utils.formatEther(domain.cost.toString(), 'ether')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), \"ETH\"]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"card__button\",\n      onClick: () => buyHandler(),\n      children: \"Buy it\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Domain, \"2OM7Y/NR3FhhO5m3ingpJn9i5Gc=\");\n_c = Domain;\nexport default Domain;\nvar _c;\n$RefreshReg$(_c, \"Domain\");","map":{"version":3,"names":["useEffect","useState","ethers","Domain","domain","ethDaddy","provider","id","owner","setOwner","hasSold","setHasSold","getOwner","isOwned","ownerOf","buyHandler","signer","getSigner","transaction","connect","mint","value","cost","wait","name","slice","utils","formatEther","toString"],"sources":["C:/Users/Imran Khan/Desktop/Blockchain/eth_daddy/src/components/Domain.js"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { ethers } from 'ethers'\r\n\r\nconst Domain = ({ domain, ethDaddy, provider, id }) => {\r\n  const [owner, setOwner] = useState(null)\r\n  const [hasSold, setHasSold] = useState(false)\r\n\r\n  const getOwner = async () => {\r\n    if (domain.isOwned || hasSold) {\r\n      const owner = await ethDaddy.ownerOf(id)\r\n      setOwner(owner);\r\n    }\r\n  }\r\n\r\n  const buyHandler = async () => {\r\n    const signer = await provider.getSigner()\r\n    const transaction = await ethDaddy.connect(signer).mint(id, {value: domain.cost})\r\n    await transaction.wait()\r\n  }\r\n\r\n  useEffect(() => {\r\n    getOwner()\r\n  }, [hasSold])\r\n\r\n  return (\r\n    <div className='card'>\r\n      <div className='card__info'>\r\n        <h3>\r\n          {\r\n          (domain.isOwned || owner) ? (\r\n            <del>{domain.name}</del>\r\n          ) : (\r\n            <>{domain.name}</>\r\n          )\r\n          }\r\n        </h3>\r\n\r\n        <p>\r\n          {domain.isOwned || owner ? (\r\n            <>\r\n              <small>\r\n                Owned by:<br />\r\n                <span>\r\n                  {owner && owner.slice(0, 6) + '...' + owner.slice(38, 42)}\r\n                </span>\r\n              </small>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <strong>\r\n                {ethers.utils.formatEther(domain.cost.toString(), 'ether')}\r\n              </strong>\r\n              ETH\r\n            </>\r\n          )}\r\n\r\n          \r\n        </p>\r\n      </div>\r\n\r\n      <button\r\n        type='button'\r\n        className='card__button'\r\n        onClick={() => buyHandler()}\r\n      >\r\n        Buy it\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Domain;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,MAAM,QAAQ,QAAQ;AAAA;AAAA;AAE/B,MAAMC,MAAM,GAAG,QAAwC;EAAA;EAAA,IAAvC;IAAEC,MAAM;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC;EAAG,CAAC;EAChD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMW,QAAQ,GAAG,YAAY;IAC3B,IAAIR,MAAM,CAACS,OAAO,IAAIH,OAAO,EAAE;MAC7B,MAAMF,KAAK,GAAG,MAAMH,QAAQ,CAACS,OAAO,CAACP,EAAE,CAAC;MACxCE,QAAQ,CAACD,KAAK,CAAC;IACjB;EACF,CAAC;EAED,MAAMO,UAAU,GAAG,YAAY;IAC7B,MAAMC,MAAM,GAAG,MAAMV,QAAQ,CAACW,SAAS,EAAE;IACzC,MAAMC,WAAW,GAAG,MAAMb,QAAQ,CAACc,OAAO,CAACH,MAAM,CAAC,CAACI,IAAI,CAACb,EAAE,EAAE;MAACc,KAAK,EAAEjB,MAAM,CAACkB;IAAI,CAAC,CAAC;IACjF,MAAMJ,WAAW,CAACK,IAAI,EAAE;EAC1B,CAAC;EAEDvB,SAAS,CAAC,MAAM;IACdY,QAAQ,EAAE;EACZ,CAAC,EAAE,CAACF,OAAO,CAAC,CAAC;EAEb,oBACE;IAAK,SAAS,EAAC,MAAM;IAAA,wBACnB;MAAK,SAAS,EAAC,YAAY;MAAA,wBACzB;QAAA,UAEGN,MAAM,CAACS,OAAO,IAAIL,KAAK,gBACtB;UAAA,UAAMJ,MAAM,CAACoB;QAAI;UAAA;UAAA;UAAA;QAAA,QAAO,gBAExB;UAAA,UAAGpB,MAAM,CAACoB;QAAI;MACf;QAAA;QAAA;QAAA;MAAA,QAEE,eAEL;QAAA,UACGpB,MAAM,CAACS,OAAO,IAAIL,KAAK,gBACtB;UAAA,uBACE;YAAA,qCACW;cAAA;cAAA;cAAA;YAAA,QAAM,eACf;cAAA,UACGA,KAAK,IAAIA,KAAK,CAACiB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,GAAGjB,KAAK,CAACiB,KAAK,CAAC,EAAE,EAAE,EAAE;YAAC;cAAA;cAAA;cAAA;YAAA,QACpD;UAAA;YAAA;YAAA;YAAA;UAAA;QACD,iBACP,gBAEH;UAAA,wBACE;YAAA,UACGvB,MAAM,CAACwB,KAAK,CAACC,WAAW,CAACvB,MAAM,CAACkB,IAAI,CAACM,QAAQ,EAAE,EAAE,OAAO;UAAC;YAAA;YAAA;YAAA;UAAA,QACnD;QAAA;MAGZ;QAAA;QAAA;QAAA;MAAA,QAGC;IAAA;MAAA;MAAA;MAAA;IAAA,QACA,eAEN;MACE,IAAI,EAAC,QAAQ;MACb,SAAS,EAAC,cAAc;MACxB,OAAO,EAAE,MAAMb,UAAU,EAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAGrB;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEV,CAAC;AAAA,GAlEKZ,MAAM;AAAA,KAANA,MAAM;AAoEZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}